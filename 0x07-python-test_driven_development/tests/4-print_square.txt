Test Cases for 4-print_square module:

>>> print_square = __import__('4-print_square').print_square

>>> print_square(4)
####
####
####
>>> print_square(0)
>>> print_square(1)
#
>>> print_square(2)
##
##
>>> print_square(3)
###
###
###
>>> print_square(5)
#####
#####
#####
#####

'size is less than 0'

>>> print_square(-4)
Traceback (most recent call last):
	...
	ValueError: size must be >= 0

'size is a float'

>>> print_square(4.5)
Traceback (most recent call last):
	...
	TypeError: size must be an integer

'size is a list'

>>> print_square([1, 2, 3])
Traceback (most recent call last):
	...
	TypeError: size must be an integer

'size is a dictionary'

>>> print_square({"a": 1, "b": 2})
Traceback (most recent call last):
	...
	TypeError: size must be an integer

'size is a set'

>>> print_square({1, 2})
Traceback (most recent call last):
	...
	TypeError: size must be an integer

'size is a tuple'

>>> print_square((1, 2))
Traceback (most recent call last):
	...
	TypeError: size must be an integer

'size is a string'

>>> print_square("a")
Traceback (most recent call last):
	...
	TypeError: size must be an integer

'size is a boolean'

>>> print_square(True)
Traceback (most recent call last):
	...
	TypeError: size must be an integer
	